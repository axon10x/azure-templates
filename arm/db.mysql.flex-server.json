{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region"
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Database for MySQL server to create."
      }
    },
    "userAssignedIdentityId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource id of the user assigned identity to be used for the Azure Database for MySQL server."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The username for the administrator account of the Azure Database for MySQL server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the Azure Database for MySQL server."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "The name of the sku, e.g. Standard_D32ds_v4."
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Burstable",
      "metadata": {
        "description": "Azure database for MySql tier",
        "allowedValues": [
          "Burstable",
          "GeneralPurpose",
          "MemoryOptimized"
        ]
      }
    },
    "version": {
      "type": "string",
      "defaultValue": "8.0.21",
      "allowedValues": [
        "5.7",
        "8.0.21"
      ],
      "metadata": {
        "description": "Server version"
      }
    },
    "availabilityZone": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Availability Zone information of the server. (Leave blank for No Preference)."
      }
    },
    "createMode": {
      "type": "string",
      "defaultValue": "Default",
      "allowedValues": [
        "Default",
        "GeoRestore",
        "Replica",
        "PointInTimeRestore"
      ]
    },
    "haEnabled": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "SameZone",
        "ZoneRedundant"
      ],
      "metadata": {
        "description": "High availability mode for a server : Disabled, SameZone, or ZoneRedundant"
      }
    },
    "standbyAvailabilityZone": {
      "type": "string",
      "defaultValue": "2",
      "metadata": {
        "description": "Availability zone of the standby server."
      }
    },
    "storageSizeGB": {
      "type": "int",
      "defaultValue": 20
    },
    "storageIops": {
      "type": "int",
      "defaultValue": 360
    },
    "storageAutogrow": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "autoIoScaling": {
      "type": "string",
      "defaultValue": "Enabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "logOnDisk": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "replicationRole": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Replica",
        "Source"
      ]
    },
    "backupRetentionDays": {
      "type": "string",
      "defaultValue": ""
    },
    "restorePointInTime": {
      "type": "string",
      "defaultValue": ""
    },
    "sourceServerResourceId": {
      "type": "int",
      "defaultValue": 7
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "dataEncryptionGeoBackupKeyUri": {
      "type": "string",
      "defaultValue": ""
    },
    "dataEncryptionGeoBackupUserAssignedIdentityId": {
      "type": "string",
      "defaultValue": ""
    },
    "dataEncryptionPrimaryKeyUri": {
      "type": "string",
      "defaultValue": ""
    },
    "dataEncryptionPrimaryUserAssignedIdentityId": {
      "type": "string",
      "defaultValue": ""
    },
    "dataEncryptionType": {
      "type": "string",
      "defaultValue": "SystemManaged",
      "allowedValues": [
        "AzureKeyVault",
        "SystemManaged"
      ]
    },
    "maintenanceCustomWindow": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "maintenanceDayOfWeek": {
      "type": "int",
      "defaultValue": 6
    },
    "maintenanceStartHour": {
      "type": "int",
      "defaultValue": 23
    },
    "maintenanceStartMinute": {
      "type": "int",
      "defaultValue": 0
    },
    "delegatedSubnetResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "privateDnsZoneResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "tags": {
      "type": "object",
      "defaultValue": "[createObject()]"
    }
  },
  "variables": {
    "timeStampTag": {
      "Timestamp": "[parameters('timestamp')]"
    },
    "tags": "[union(parameters('tags'), variables('timeStampTag'))]",
    "identity": "[
      if
      (
        not(empty(parameters('userAssignedIdentityId'))),
        createObject
        (
          'type', 'UserAssigned',
          'userAssignedIdentities',
          createObject
          (
            parameters('userAssignedIdentityId'), createObject()
          )
        ),
        json('null')
      )
    ]",
    "apiVersionMySql": "2024-12-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.DBforMySQL/flexibleServers",
      "apiVersion": "[variables('apiVersionMySql')]",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]"
      },
      "identity": "[variables('identity')]",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "[parameters('version')]",
        "createMode": "[parameters('createMode')]",
        "availabilityZone": "[parameters('availabilityZone')]",
        "highAvailability": {
          "mode": "[parameters('haEnabled')]",
          "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
        },
        "storage": {
          "storageSizeGB": "[parameters('storageSizeGB')]",
          "iops": "[parameters('storageIops')]",
          "autoIoScaling": "[parameters('autoIoScaling')]",
          "autoGrow": "[parameters('storageAutogrow')]",
          "logOnDisk": "[parameters('logOnDisk')]"
        },
        "dataEncryption": {
          "geoBackupKeyURI": "[parameters('dataEncryptionGeoBackupKeyUri')]",
          "geoBackupUserAssignedIdentityId": "[parameters('dataEncryptionGeoBackupUserAssignedIdentityId')]",
          "primaryKeyURI": "[parameters('dataEncryptionPrimaryKeyUri')]",
          "primaryUserAssignedIdentityId": "[parameters('dataEncryptionPrimaryUserAssignedIdentityId')]",
          "type": "[parameters('dataEncryptionType')]"
        },
        "maintenanceWindow": {
          "customWindow": "[parameters('maintenanceCustomWindow')]",
          "dayOfWeek": "[parameters('maintenanceDayOfWeek')]",
          "startHour": "[parameters('maintenanceStartHour')]",
          "startMinute": "[parameters('maintenanceStartMinute')]"
        },
        "network": {
          "delegatedSubnetResourceId": "[parameters('delegatedSubnetResourceId')]",
          "privateDnsZoneResourceId": "[parameters('privateDnsZoneResourceId')]",
          "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
        },
        "replicationRole": "[parameters('replicationRole')]",
        "restorePointInTime": "[parameters('restorePointInTime')]",
        "sourceServerResourceId": "[parameters('sourceServerResourceId')]",
        "backup": {
          "backupRetentionDays": "[parameters('backupRetentionDays')]",
          "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        }
      }
    }
  ]
}