{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "displayName": "Azure region",
        "description": "See https://azure.microsoft.com/regions/."
      }
    },
    "configStoreName": {
      "type": "string"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Free"
      ]
    },
    "assignSystemIdentity": {
      "type": "bool",
      "defaultValue": false
    },
    "userAssignedIdentityResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "displayName": "User Assigned Identity Resource ID (optional)",
        "description": "User Assigned Identity resource ID to associate with the Config Store. Not required."
      }
    },
    "disableLocalAuth": {
      "type": "bool",
      "defaultValue": true
    },
    "enablePurgeProtection": {
      "type": "bool",
      "defaultValue": false
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "softDeleteRetentionInDays": {
      "type": "int",
      "defaultValue": 1
    },
    "tags": {
      "type": "object",
      "defaultValue": "[createObject()]"
    }
  },
  "variables":
  {
    "timeStampTag": {
      "Timestamp": "[parameters('timestamp')]"
    },
    "tags": "[union(parameters('tags'), variables('timeStampTag'))]",
    "createMode": "Default",
    "assignUserIdentity": "[not(empty(trim(parameters('userAssignedIdentityResourceId'))))]",
    "identityType": "[if(and(not(parameters('assignSystemIdentity')), not(variables('assignUserIdentity'))), 'None', if(and(parameters('assignSystemIdentity'), variables('assignUserIdentity')), 'SystemAssigned,UserAssigned', if(parameters('assignSystemIdentity'), 'SystemAssigned', 'UserAssigned')))]",
    "userAssignedIdentities": "[if(empty(trim(parameters('userAssignedIdentityResourceId'))), json('null'), createObject(parameters('userAssignedIdentityResourceId'), json('{}')))]",
    "apiVersionAppConfig": "2025-02-01-preview"
  },
  "resources":
  [
    {
      "type": "Microsoft.AppConfiguration/configurationStores",
      "apiVersion": "[variables('apiVersionAppConfig')]",
      "name": "[parameters('configStoreName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku":
      {
        "name": "[parameters('skuName')]"
      },
      "identity":
      {
        "type": "[variables('identityType')]",
        "userAssignedIdentities": "[variables('userAssignedIdentities')]"
      },
      "properties":
      {
        "createMode": "[variables('createMode')]",
        "disableLocalAuth": "[parameters('disableLocalAuth')]",
        "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
        "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]"
      }
    }
  ],
  "outputs":
  {
    "resourceId":
    {
      "type": "string",
      "value": "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('configStoreName'))]"
    }
  }
}
