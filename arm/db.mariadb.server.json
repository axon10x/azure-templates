{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters":
  {
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region"
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Database for MariaDB server"
      }
    },
    "administratorLogin": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Database administrator username"
      }
    },
    "administratorPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "GeneralPurpose",
      "metadata": {
        "description": "Azure database for MariaDB pricing tier"
      }
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
        "description": "Azure database for MariaDB sku family"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "GP_Gen5_2",
      "metadata": {
        "description": "Azure database for MariaDB sku name "
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Azure database for MariaDB compute capacity in vCores (2,4,8,16,32)"
      }
    },
    "skuSizeMB": {
      "type": "int",
      "defaultValue": 102400,
      "metadata": {
        "description": "The size of the Azure Database for MariaDB server"
      }
    },
    "mariaDbVersion": {
      "type": "string",
      "defaultValue": "10.3",
      "allowedValues": [
        "10.2",
        "10.3"
      ]
    },
    "createMode": {
      "type": "string",
      "defaultValue": "Default",
      "allowedValues": [
        "Default",
        "Replica",
        "GeoRestore",
        "PointInTimeRestore"
      ]
    },
    "sourceServerId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "When createMode is not Default, you must specify this value."
      }
    },
    "restorePointInTime": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "When createMode is PointInTimeRestore, you must specify this value."
      }
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "minValue": 7,
      "maxValue": 35
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "storageAutogrow": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "minimumTlsVersion": {
      "type": "string",
      "defaultValue": "TLS1_2",
      "allowedValues": [
        "TLS1_2"
      ]
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "tags": {
      "type": "object",
      "defaultValue": "[createObject()]"
    }
  },
  "variables":
  {
    "storageProfile": "[
      if
      (
        equals(parameters('createMode'), 'Default'),
        createObject
        (
          'storageMB', parameters('skuSizeMB'),
          'backupRetentionDays', parameters('backupRetentionDays'),
          'geoRedundantBackup', parameters('geoRedundantBackup'),
          'storageAutogrow', parameters('storageAutogrow')
        ),
        createObject
        (
          'storageMB', parameters('skuSizeMB'),
          'backupRetentionDays', parameters('backupRetentionDays'),
          'geoRedundantBackup', parameters('geoRedundantBackup')
        )
      )
    ]",
    "timeStampTag":
    {
      "Timestamp": "[parameters('timestamp')]"
    },
    "tags": "[union(parameters('tags'), variables('timeStampTag'))]",
    "apiVersionMariaDb": "2018-06-01"
  },
  "resources": [
    {
      "type": "Microsoft.DBforMariaDB/servers",
      "apiVersion": "[variables('apiVersionMariaDb')]",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku":
      {
        "family": "[parameters('skuFamily')]",
        "name": "[parameters('skuName')]",
        "tier": "[parameters('skuTier')]",
        "capacity": "[parameters('skuCapacity')]",
        "size": "[format('{0}', parameters('skuSizeMB'))]"
      },
      "properties":
      {
        "createMode": "[parameters('createMode')]",
        "administratorLogin": "[if(empty(parameters('administratorLogin')), json('null'), parameters('administratorLogin'))]",
        "administratorLoginPassword": "[if(empty(parameters('administratorPassword')), json('null'), parameters('administratorPassword'))]",
        "sourceServerId": "[if(empty(parameters('sourceServerId')), json('null'), parameters('sourceServerId'))]",
        "restorePointInTime": "[if(empty(parameters('restorePointInTime')), json('null'), parameters('restorePointInTime'))]",
        "version": "[parameters('mariaDbVersion')]",
        "storageProfile": "[variables('storageProfile')]",
        "sslEnforcement": "Enabled",
        "minimalTlsVersion": "[parameters('minimumTlsVersion')]",
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
      }
    }
  ],
  "outputs":
  {
    "serverResourceId":
    {
      "type": "string",
      "value": "[resourceId('Microsoft.DBforMariaDB/servers', parameters('serverName'))]"
    }
  }
}