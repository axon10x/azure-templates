{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('u')]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region"
      }
    },
    "namespaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "ruleSetName": {
      "type": "string",
      "defaultValue": "default"
    },
    "subnetResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "trustedServiceAccessEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "inboundAllowedIp": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "displayName": "Source for dev/test inbound",
        "description": "Optional. If provided, will be configured to allow inbound. Likely not appropriate to provide in production."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": "[createObject()]"
    }
  },
  "variables": {
    "timeStampTag": {
      "Timestamp": "[parameters('timestamp')]"
    },
    "tags": "[union(parameters('tags'), variables('timeStampTag'))]",
    "apiVersionEventHub": "2025-05-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "name": "[concat(parameters('namespaceName'), '/', parameters('ruleSetName'))]",
      "apiVersion": "[variables('apiVersionEventHub')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "defaultAction": "Deny",
        "virtualNetworkRules": [
          {
            "subnet": {
              "id": "[parameters('subnetResourceId')]"
            },
            "ignoreMissingVnetServiceEndpoint": false
          }
        ],
        "ipRules": [
          "[
                        if
                        (
                            empty(trim(parameters('inboundAllowedIp'))),
                            json('null'),
                            createObject
                            (
                                'ipMask', parameters('inboundAllowedIp'),
                                'action', 'Allow'
                            )
                        )
        ]"
      ],
      "trustedServiceAccessEnabled": "[parameters('trustedServiceAccessEnabled')]"
    }
  }
]
}